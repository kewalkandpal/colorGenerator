{"version":3,"sources":["component/Rgbtohex.js","component/Colorplate.js","component/App.js","index.js"],"names":["clrConvert","rgb","hex","toString","rgbTohex","r","g","b","Colorplate","weight","index","useState","msg","setmsg","hexValue","useEffect","clrTime","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","bottom","position","App","color","setcolor","error","seterror","Allcolor","all","list","setlist","type","placeholder","onChange","e","target","value","colors","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAAMA,EAAa,SAACC,GAChB,IAAIC,EAAMD,EAAIE,SAAS,IAIxB,OAHID,EAAM,IACLA,EAAM,IAAMA,GAEVA,GASKE,EALE,SAACC,EAAEC,EAAEC,GAElB,MADa,IAAMP,EAAWK,GAAKL,EAAWM,GAAKN,EAAWO,I,OCoBnDC,EA3BI,SAAC,GAA4B,IAA1BP,EAAyB,EAAzBA,IAAKQ,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC/B,EAAsBC,oBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAWV,EAAQ,WAAR,cAAYH,IAW7B,OATAc,qBAAU,WACN,IAAIC,EAAUC,YAAW,WACrBJ,GAAO,KACT,KACF,OAAO,WACHK,aAAaF,MAEnB,CAACJ,IAGK,sBAAKO,UAAS,iBAAYT,EAAQ,GAAK,iBAAmBU,MAAO,CAAEC,gBAAgB,OAAD,OAASpB,EAAT,MAAmBqB,QAAS,WAC1GT,GAAO,GACPU,UAAUC,UAAUC,UAAUX,IAFlC,UAII,8BAAIL,EAAJ,OACA,4BAAIK,IAEAF,EAAM,mBAAGQ,MAAO,CAACM,OAAO,OAASC,SAAS,YAApC,iCAA2E,S,gBCsBtFC,EAzCH,WACR,MAA2BjB,qBAA3B,mBAAOkB,EAAP,KAAeC,EAAf,KACA,EAA2BnB,oBAAS,GAApC,mBAAOoB,EAAP,KAAeC,EAAf,KACA,EAAyBrB,mBAAS,IAAIsB,IAAS,WAAWC,IAAI,KAA9D,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OACI,qCAEI,sBAAKjB,UAAU,OAAf,UACI,0CACD,uBAAOkB,KAAK,OAAOC,YAAY,UAAUnB,UAAS,UAAKY,EAAQ,WAAa,MAAQQ,SAAU,SAACC,GAC3FV,EAASU,EAAEC,OAAOC,UAEtB,wBAAQvB,UAAU,MAAMG,QAnBnC,WACI,IACI,IAAIqB,EAAS,IAAIV,IAASJ,GAAOK,IAAI,IAErCE,EAAQO,GAEZ,MAAMZ,GACJC,GAAS,KAYJ,uBAEH,qBAAKb,UAAU,SAAf,SAEIgB,EAAKS,KAAI,SAACf,EAAMnB,GACZ,OACI,mCACC,cAAC,EAAD,2BAA4BmB,GAA5B,IAAmCnB,MAAOA,IAAzBA,cC/B1CmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b776ecc5.chunk.js","sourcesContent":["const clrConvert = (rgb)=>{\r\n    let hex = rgb.toString(16);\r\n    if(hex < 2){\r\n        hex = \"0\" + hex;\r\n    }\r\n   return hex;\r\n};\r\n\r\n\r\nconst rgbTohex = (r,g,b) =>{\r\n    let hexClr = \"#\" + clrConvert(r) + clrConvert(g) + clrConvert(b);\r\n    return hexClr;\r\n}\r\n\r\nexport default rgbTohex;\r\n","import React, { useEffect, useState } from 'react';\r\nimport rgbTohex from './Rgbtohex';\r\n\r\nconst Colorplate = ({ rgb, weight, index }) => {\r\n    const [msg, setmsg] = useState(false);\r\n    const hexValue = rgbTohex(...rgb);\r\n\r\n    useEffect(()=>{\r\n        let clrTime = setTimeout(()=>{\r\n            setmsg(false)\r\n        },500)\r\n        return ()=>{\r\n            clearTimeout(clrTime)\r\n        }\r\n    },[msg])\r\n\r\n    return (\r\n            <div className={`colors ${index > 9 && \"changeTextClr\"}`} style={{ backgroundColor: `rgb(${rgb})` }} onClick={()=>{\r\n                setmsg(true)\r\n                navigator.clipboard.writeText(hexValue)\r\n            }}>\r\n                <p>{weight}%</p>\r\n                <p>{hexValue}</p>\r\n                {\r\n                    msg ? <p style={{bottom:\"20px\" , position:\"absolute\"}}>copied to clipboard</p> : null\r\n                }\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Colorplate;","import React, { useState} from 'react';\r\nimport './App.css';\r\nimport Colorplate from './Colorplate';\r\nimport Allcolor from 'values.js';\r\n\r\nconst App = () =>{\r\n    const [color , setcolor] = useState();\r\n    const [error , seterror] = useState(false);\r\n    const [list , setlist] = useState(new Allcolor(\"#f5428d\").all(10));\r\n\r\n    function generateClr (){\r\n        try{\r\n            let colors = new Allcolor(color).all(10);\r\n            // console.log(colors);\r\n            setlist(colors);\r\n        }\r\n        catch(error){\r\n          seterror(true)      \r\n        }  \r\n    };\r\n\r\n    return(\r\n        <>\r\n\r\n            <div className=\"main\">\r\n                <h2>GENERATE</h2>\r\n               <input type=\"text\" placeholder=\"#f5428d\" className={`${error ? \"geterror\" : null}`} onChange={(e)=>{\r\n                   setcolor(e.target.value);\r\n               }} />\r\n               <button className=\"btn\" onClick={generateClr}>Submit</button>\r\n            </div>\r\n            <div className=\"clrDiv\">\r\n            {\r\n                list.map((color,index)=>{\r\n                    return(\r\n                        <>\r\n                         <Colorplate key={index} {...color} index={index}/>\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n           </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}